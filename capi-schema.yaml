# https://swagger.io/docs/specification/about/ are the best docs I've found
# use https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi to preview
# Run ./script/openapi after modifications to generate docs and code.
openapi: 3.0.0
info:
  title: Copilot API
  description: API for interacting with Azure models
  version: 1.0.0
servers:
  - url: https://api.githubcopilot.com
    description: Production server
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
    copilot-integration-id:
      type: apiKey
      in: header
      name: Copilot-Integration-Id
      description: Internal the integration id
    request-hmac:
      type: apiKey
      in: header
      name: Request-Hmac
      description: Internal the shared hmac token
  schemas:

    chat_message_function_call:
      type: object
      properties:
        arguments:
          type: string
        name:
          type: string

    chat_message:
      type: object
      properties:
        role:
          type: string
          enum: [user, system, assistant, function]
        content:
          type: string
        function_call:
          $ref: "#/components/schemas/chat_message_function_call"
        name:
          type: string
      required:
        - role
    function_definition:
      type: object
      description: A function to call.
      properties:
        name:
          type: string
        description:
          type: string
        parameters:
          x-go-type: any
          description: The parameters the functions accepts, described as a JSON Schema object.
          default: {}
      required:
        - name
        - parameters
    function_call__with_name:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    function_call__string:
      type: string
      enum:
        - none
        - auto
    chat_model:
      enum:
        - gpt-3.5-turbo
        - gpt-4
        - gpt-4-0125-adaf089e
      type: string
    embeddings_model:
      enum:
        - text-embedding-ada-002
        - text-embedding-ada-002-index
        - text-embedding-3-small
        - text-embedding-3-small-inference
      type: string

    model_family:
      x-go-type-name: ModelFamily
      type: string
      enum:
        - gpt-3.5-turbo
        - gpt-4
        - gpt-4-turbo
        - text-embedding-ada-002
        - text-embedding-3-small
        - text-embedding-3-large
      x-enum-varnames:
        - ModelFamilyGpt35Turbo
        - ModelFamilyGpt4
        - ModelFamilyGpt4Turbo
        - ModelFamilyTextEmbeddingAda002
        - ModelFamilyTextEmbedding3Small
        - ModelFamilyTextEmbedding3Large

    model_type:
      x-go-type-name: ModelType
      type: string
      enum:
        - chat
        - embeddings
      x-enum-varnames:
        - ModelTypeChat
        - ModelTypeEmbeddings

    model:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        name:
          type: string
        version:
          type: string
        capabilities:
          $ref: "#/components/schemas/model_capabilities"
      required:
        - id
        - object
        - name
        - version

    model_capabilities:
      type: object
      properties:
        object:
          type: string
        family:
          $ref: "#/components/schemas/model_family"
        type:
          $ref: "#/components/schemas/model_type"
      required:
        - object
        - family
        - type

    models_list_response:
      type: object
      properties:
        object:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/model"
      required:
        - object
        - data

    inner_error:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        inner_error:
          $ref: '#/components/schemas/inner_error'
          description: Inner error.

    error:
      type: object
      x-go-type-skip-optional-pointer: true
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/error'
          description: An array of details about specific errors that led to this reported error.
        inner_error:
          $ref: '#/components/schemas/inner_error'
          description: An object containing more specific information than the current object about the error.
        target:
          type: string
          description: The target of the error.

    content_filter_results_error:
      type: object
      x-go-type-skip-optional-pointer: true
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/error'
          description: An array of details about specific errors that led to this reported error.
        inner_error:
          $ref: '#/components/schemas/inner_error'
          description: An object containing more specific information than the current object about the error.
        target:
          type: string
          description: The target of the error.

    content_filter_result:
      type: object
      properties:
        filtered:
          type: boolean
          description: A value indicating whether or not the content has been filtered.
        severity:
          type: string
          description: Ratings for the intensity and risk level of filtered content.
    
    chat_choice_content_filter_results:
      type: object
      x-go-type-skip-optional-pointer: true
      properties:
        error:
          $ref: '#/components/schemas/content_filter_results_error'
          description: Describes an error returned if the content filtering system is down or otherwise unable to complete the operation in time.
        hate:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language attacks or uses that include pejorative or discriminatory language with reference to a person or identity group on the basis of certain differentiating attributes of these groups including but not limited to race, ethnicity, nationality, gender identity and expression, sexual orientation, religion, immigration status, ability status, personal appearance, and body size.
        self_harm:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language related to physical actions intended to purposely hurt, injure, or damage one’s body, or kill oneself.
        sexual:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language related to anatomical organs and genitals, romantic relationships, acts portrayed in erotic or affectionate terms, physical sexual acts, including those portrayed as an assault or a forced sexual violent act against one’s will, prostitution, pornography, and abuse.
        violence:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language related to physical actions intended to hurt, injure, damage, or kill someone or something; describes weapons, etc.
    
    chat_message_context:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/chat_message'
          description: The contextual message payload associated with the Azure chat extensions used for a chat completions request. These messages describe the data source retrievals, plugin invocations, and other intermediate steps taken in the course of generating a chat completions response that was augmented by capabilities from Azure OpenAI chat extensions.

    chat_choice_delta:
      type: object
      properties:
        content:
          type: string
          description: The text associated with this message payload.
        role:
          type: string
          description: The role associated with this message payload.
        context:
          $ref: '#/components/schemas/chat_message_context'
          description: Additional context data associated with a chat message when requesting chat completions using compatible Azure OpenAI chat extensions. This includes information like the intermediate data source retrievals used to service a request. This context information is only populated when using Azure OpenAI with chat extensions capabilities configured.
        function_call:
          $ref: '#/components/schemas/chat_message_function_call'
          description: The name and arguments of a function that should be called, as generated by the model.
        name:
          type: string
          description: The name of the author of this message. name is required if role is function, and it should be the name of the function whose response is in the content. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.

    chat_choice_message:
      type: object
      properties:
        content:
          type: string
          description: The text associated with this message payload.
        role:
          type: string
          description: The role associated with this message payload.
        context:
          $ref: '#/components/schemas/chat_message_context'
          description: Additional context data associated with a chat message when requesting chat completions using compatible Azure OpenAI chat extensions. This includes information like the intermediate data source retrievals used to service a request. This context information is only populated when using Azure OpenAI with chat extensions capabilities configured.
        function_call:
          $ref: '#/components/schemas/chat_message_function_call'
          description: The name and arguments of a function that should be called, as generated by the model.
        name:
          type: string
          description: The name of the author of this message. name is required if role is function, and it should be the name of the function whose response is in the content. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.

    chat_choice:
      type: object
      x-go-type-skip-optional-pointer: true
      required:
        - finish_reason
        - index
      properties:
        finish_reason:
          type: string
          description: The reason that this chat completions choice completed its generated.
        index:
          type: integer
          format: int32
          description: The ordered index associated with this chat completions choice.
        content_filter_results:
          $ref: '#/components/schemas/chat_choice_content_filter_results'
          description: Information about the content filtering category (hate, sexual, violence, selfharm), if it has been detected, as well as the severity level (verylow, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not.
        delta:
          $ref: '#/components/schemas/chat_choice_delta'
          description: The delta message content for a streaming response.
        message:
          $ref: '#/components/schemas/chat_choice_message'
          description: The chat message for a given chat completions prompt.

    prompt_filter_result_content_filter_results:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/content_filter_results_error'
          description: Describes an error returned if the content filtering system is down or otherwise unable to complete the operation in time.
        hate:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language attacks or uses that include pejorative or discriminatory language with reference to a person or identity group on the basis of certain differentiating attributes of these groups including but not limited to race, ethnicity, nationality, gender identity and expression, sexual orientation, religion, immigration status, ability status, personal appearance, and body size.
        self_harm:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language related to physical actions intended to purposely hurt, injure, or damage one’s body, or kill oneself.
        sexual:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language related to anatomical organs and genitals, romantic relationships, acts portrayed in erotic or affectionate terms, physical sexual acts, including those portrayed as an assault or a forced sexual violent act against one’s will, prostitution, pornography, and abuse.
        violence:
          $ref: '#/components/schemas/content_filter_result'
          description: Describes language related to physical actions intended to hurt, injure, damage, or kill someone or something; describes weapons, etc.
    

    prompt_filter_result:
      type: object
      required:
        - prompt_index
      properties:
        prompt_index:
          type: integer
          format: int32
          description: The index of this prompt in the set of prompt results
        content_filter_results:
          $ref: '#/components/schemas/prompt_filter_result_content_filter_results'
          description: Content filtering results for this prompt

    completions_usage:
      type: object
      required:
        - completion_tokens
        - prompt_tokens
        - total_tokens
      properties:
        completion_tokens:
          type: integer
          format: int32
          description: The number of tokens generated across all completions emissions.
        prompt_tokens:
          type: integer
          format: int32
          description: The number of tokens in the provided prompts for the completions request.
        total_tokens:
          type: integer
          format: int32
          description: The total number of tokens processed for the completions request and response.

    chat_completions:
      x-go-name: ChatCompletions
      type: object
      required:
        - choices
        - created
        - id
        - usage
      properties:
        choices:
          type: array
          items:
            $ref: '#/components/schemas/chat_choice'
          description: The collection of completions choices associated with this completions response. Generally, n choices are generated per provided prompt with a default value of 1. Token limits and other settings may limit the number of choices generated.
        created:
          type: string
          format: date-time
          description: The first timestamp associated with generation activity for this completions response, represented as seconds since the beginning of the Unix epoch of 00:00 on 1 Jan 1970.
        id:
          type: string
          description: A unique identifier associated with this chat completions response.
        usage:
          $ref: '#/components/schemas/completions_usage'
          description: Usage information for tokens processed and generated as part of this completions operation.
        prompt_filter_results:
          type: array
          items:
            $ref: '#/components/schemas/prompt_filter_result'
          description: Content filtering results for zero or more prompts in the request. In a streaming request, results for different prompts may arrive at different times or in different orders.

paths:
  /_ping:
    get:
      security: []
      summary: Ping
      responses:
        "200":
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: OK

  /chat/completions:
    post:
      security:
        - bearer: []
      summary: OpenAI compatible Chat API.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-go-type-name: ChatCompletionsOptions
              type: object
              properties:
                model:
                  $ref: "#/components/schemas/chat_model"
                messages:
                  type: array
                  minItems: 1
                  items:
                    $ref: "#/components/schemas/chat_message"
                temperature:
                  type: number
                  minimum: 0
                  maximum: 2
                top_p:
                  type: number
                n:
                  type: integer
                  format: int32
                stream:
                  x-go-type-skip-optional-pointer: true
                  type: boolean
                stop:
                  x-go-type-skip-optional-pointer: true
                  type: array
                  items:
                    type: string
                max_tokens:
                  type: integer
                  format: int32
                presence_penalty:
                  type: number
                  minimum: -2.0
                  maximum: 2.0
                frequency_penalty:
                  type: number
                  minimum: -2.0
                  maximum: 2.0
                logit_bias:
                  x-go-type: map[string]*int32
                  x-go-type-skip-optional-pointer: true
                  type: object
                  additionalProperties:
                    type: integer
                    format: int32
                function_call:
                  x-go-type: ChatCompletionsOptionsFunctionCall
                  description: >-
                    Controls which (if any) function is called by the model. none means the model will not call a function and instead generates a message.
                    `auto` means the model can pick between generating a message or calling a function.
                    Specifying a particular function via `{"name": "my_function"}` forces the model to call that function.

                    `none` is the default when no functions are present. `auto` is the default if functions are present.
                  oneOf:
                    - $ref: "#/components/schemas/function_call__with_name"
                    - $ref: "#/components/schemas/function_call__string"
                functions:
                  x-go-type-skip-optional-pointer: true
                  description: A list of functions the model may generate JSON inputs for.
                  type: array
                  items:
                    $ref: "#/components/schemas/function_definition"
                user:
                  type: string
                intent:
                  x-go-type-skip-optional-pointer: true
                  type: boolean
                  description: >-
                    IDE requests include a custom field that specifies whether they want to check for off-topic
                    intent or not.
                snippy:
                  type: object
                  description: >-
                    Setting this field overrides the user's Snippy preference for dev/test flows. Requires your integration to have `SnippyOverrideEnabled`.
                  properties:
                    enabled:
                      type: boolean
                  required:
                    - enabled
              required:
                - messages
                - model
            example:
              messages:
                - role: system
                  content: you are a helpful assistant
              temperature: 1.0
              n: 1
              stop: stop
              max_tokens: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/chat_completions"
              example:
                id: id-123
                object: chat.completion
                created: 1677652288
                choices:
                  - index: 0
                    message:
                      role: assistant
                      content: "\n\nHello there, how may I assist you today?"
                    finish_reason: stop
                usage:
                  prompt_tokens: 9
                  completion_tokens: 12
                  total_tokens: 21
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "500":
          description: Internal server error.

  /embeddings:
    post:
      security:
        - bearer: []
      summary: OpenAI compatible completions API.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: "#/components/schemas/embeddings_model"
                input:
                  type: array
                  items:
                    type: string
                  minItems: 1
                  maxItems: 16
              required:
                - input
                - model
            example:
              input: a pineapple by the sea
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                        embedding:
                          type: array
                          items:
                            type: number
                  usage:
                    type: object
                    properties:
                      prompt_tokens:
                        type: integer
                      total_tokens:
                        type: integer
              example:
                data:
                  - index: 0
                    embedding:
                      - 0.0023064255
                      - -0.009327292
                      - -0.0028842222
                usage:
                  prompt_tokens: 8
                  total_tokens: 16
        "401":
          description: Unauthorized.
        "500":
          description: Internal server error.

  /models:
    get:
      security:
        - bearer: []
      summary: List available models.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/models_list_response"
        "401":
          description: Unauthorized.
        "500":
          description: Internal server error.
